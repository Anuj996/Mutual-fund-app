{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\Mutual fund App\\\\frontend\\\\src\\\\pages\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport { useState, useContext } from \"react\";\nimport { AuthContext } from \"../context/AuthProvider\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginPage() {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const {\n    setToken\n  } = useContext(AuthContext); // ✅ Fix here\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const res = await fetch(\"http://localhost:5001/api/auth/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await res.json();\n      if (res.ok && data.token) {\n        setToken(data.token); // ✅ Fix here\n        navigate(\"/saved\");\n      } else {\n        alert(data.message || \"Login failed\");\n      }\n    } catch (err) {\n      console.error(\"Login error:\", err);\n      alert(\"Network error\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex justify-center items-center bg-gray-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-6 bg-white rounded shadow-md w-96\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl mb-4 font-bold text-center\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"w-full p-2 border rounded\",\n          placeholder: \"Email\",\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"w-full p-2 border rounded\",\n          type: \"password\",\n          placeholder: \"Password\",\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"w-full bg-blue-500 text-white py-2 rounded\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"nDlwvB/UczzQJrVponl83DqvDng=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["useState","useContext","AuthContext","useNavigate","jsxDEV","_jsxDEV","LoginPage","_s","email","setEmail","password","setPassword","setToken","navigate","handleSubmit","e","preventDefault","res","fetch","method","headers","body","JSON","stringify","data","json","ok","token","alert","message","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","onChange","target","value","type","_c","$RefreshReg$"],"sources":["C:/project/Mutual fund App/frontend/src/pages/LoginPage.js"],"sourcesContent":["import { useState, useContext } from \"react\";\nimport { AuthContext } from \"../context/AuthProvider\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function LoginPage() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const { setToken } = useContext(AuthContext); // ✅ Fix here\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const res = await fetch(\"http://localhost:5001/api/auth/login\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ email, password }),\n      });\n\n      const data = await res.json();\n      if (res.ok && data.token) {\n        setToken(data.token); // ✅ Fix here\n        navigate(\"/saved\");\n      } else {\n        alert(data.message || \"Login failed\");\n      }\n    } catch (err) {\n      console.error(\"Login error:\", err);\n      alert(\"Network error\");\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex justify-center items-center bg-gray-100\">\n      <div className=\"p-6 bg-white rounded shadow-md w-96\">\n        <h1 className=\"text-2xl mb-4 font-bold text-center\">Login</h1>\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\n          <input\n            className=\"w-full p-2 border rounded\"\n            placeholder=\"Email\"\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          <input\n            className=\"w-full p-2 border rounded\"\n            type=\"password\"\n            placeholder=\"Password\"\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <button className=\"w-full bg-blue-500 text-white py-2 rounded\">\n            Login\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}